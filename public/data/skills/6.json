{"data":{"id":"6","name":"Cutting scope","description":"Identifying critical path dependencies to avoid being held up by inessential work.","tags":[{"id":"7","name":"planning"},{"id":"8","name":"time management"}],"recommendations":[{"id":"49","markdown":"Anyone who is responsible for determining project milestones, sprint objectives and the like should hone this skill. Product managers, individual contributors, and tech leads all have reasons to get clear on the scope of work to keep progress on track.","facet_id":"1"},{"id":"50","markdown":"When you look at the amount of work to complete a task and it stresses you out, do you feel like you could reimagine the work in a way that is doable within the allotted time frame?","facet_id":"2"},{"id":"51","markdown":"The book [Getting Real](https://basecamp.com/books/getting-real) by 37Signals (now Basecamp) is a quick read about focusing on what matters to software products. For an even quicker read, here are [notes on Getting Real](https://mvwi.medium.com/exhaustive-notes-getting-real-37signals-ffd3990e9309) by Michael Williams.\n\nBasecamp has a newer methodology which is published in a book called [Shape Up](https://basecamp.com/shapeup) that goes into detail about how to scope out projects in the first place, and avoid scope creep during implementation.","facet_id":"3"},{"id":"52","markdown":"Keep a close eye on your colleagues during project work. There are signs that scope needs to be cut before the project is officially behind schedule. These include dropping quality of work and complaints about being tight on time.","facet_id":"4"},{"id":"53","markdown":"When initially scoping out a project, it's a great opportunity to clearly define the critical path. Having done so will be invaluable when the project starts to get behind schedule, as it can be used to easily determine what can be cut or deferred.","facet_id":"4"},{"id":"54","markdown":"Luckily, we're not always working on a project that is behind schedule. During those times, there are still lots of opportunities to practice cutting scope. For example:\n\n- Assess the scope of each ticket in your current backlog. Think of what scope might be required to do the ticket that isn't documented.\n- Think about how your current work could be split into tasks that need to be done now, and ones that can be deferred. For example, some values could be hard-coded at first and then replaced with configuration later.\n- Take a look at your personal to-do list. Delete unimportant items that you weren't likely to get to.\n- Run some work you're doing by someone else and let them tell you what they think is extraneous.","facet_id":"5"},{"id":"55","markdown":"When you're scoping out some work, explain it to someone who is not involved. This will give you insight as you hear your own ideas spoken aloud, and is also an opportunity to get feedback from someone who is curious about the choices that were made.","facet_id":"5"}]}}