{"data":{"id":"11","name":"Asking for help","description":"Knowing when to ask for help and how to do it effectively.","tags":[{"id":"1","name":"communication"},{"id":"4","name":"humility"},{"id":"6","name":"learning"},{"id":"9","name":"teamwork"},{"id":"8","name":"time management"}],"recommendations":[{"id":"1","markdown":"Anyone whose job involves solving problems needs to know how to get unstuck when a problem is limiting their productivity.","facet_id":"1"},{"id":"14","markdown":"When you ask for help, do you intentionally provide meaningful context to reduce the effort required by helpers to assist you?\n\nIf you ask for help and don't get answers, it might be because you need to be more specific. It takes effort from the person answering to ask clarifying questions and chase down the problem. If you get responses that ask for more information about your problem, it might mean you need to include more detail. If responses often ask what you've tried already, it might mean you need to communicate where you are in the problem solving process.","facet_id":"2"},{"id":"15","markdown":"Stack Overflow's [How do I ask a good question?](https://stackoverflow.com/help/how-to-ask) guide outlines important qualities of good questions.","facet_id":"3"},{"id":"16","markdown":"The article [How To Ask Questions That Lead to Answers](https://mod0.turing.edu/asking-questions) goes over some key points about asking questions.","facet_id":"3"},{"id":"17","markdown":"Everyone has their own preference for how long they're comfortable being stuck for. Think about what your preference is; it could be twenty minutes or two hours. At different points on a project, it might be valuable to spend more time before asking for help in order to learn the system you're working on more deeply. When being stuck is negatively affecting your team, consider asking for help sooner than you normally would.","facet_id":"4"},{"id":"18","markdown":"Simply describing your problem is often enough to generate ideas for how to go about solving it. This is called [rubber duck debugging](https://en.wikipedia.org/wiki/Rubber_duck_debugging). When you encounter a problem, even before you ask for help, try describing the problem out loud as if you're explaining it to someone else.","facet_id":"5"}]}}